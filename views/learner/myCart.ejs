<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div class="min-h-screen flex flex-col lg:flex-row">
        <div class="container mx-auto p-4">
            <h1 class="text-2xl font-bold mb-4">Shopping Cart</h1>
            <div id="cart-items"></div>
            <h2 class="text-xl font-semibold mt-8">Total: <span id="total-price"></span>.000 vnd</h2>
        </div>
        <div class="w-full lg:w-2/3 lg:pr-20 lg:pl-60 lg:pt-10 bg-white px-10 pt-10">
            <h1 class="text-xl font-bold mb-6">Checkout</h1>

            <div class="mb-6">
                <label class="block text-lg font-semibold mb-2">Billing Address</label>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-600 pb-4">Country</label>
                    <select
                        class="block w-full p-3 border border-black focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        <option>Vietnam</option>
                        <option>United States</option>
                        <option>Canada</option>
                        <option>Australia</option>
                    </select>
                </div>
                <p class="text-sm text-gray-500">ITLearning is required by law to collect applicable transaction taxes
                    for purchases made in certain tax jurisdictions.</p>
            </div>

            <div class="mb-8">
                <label class="block text-xl font-semibold mb-4">Payment Method</label>
                <div class="flex items-center mb-1 border border-gray-300 p-3">
                    <input id="card" name="payment-method" type="radio" value="VISA"
                        class="form-radio h-5 w-5 text-blue-600">
                    <label for="card" class="ml-3 text-lg font-medium">Credit/Debit Card</label>
                    <div class="ml-auto flex space-x-2">
                        <img class="h-10" src="https://cdn.iconscout.com/icon/free/png-256/visa-3-226460.png"
                            alt="Visa">
                        <img class="h-10" src="https://cdn.iconscout.com/icon/free/png-256/mastercard-12-226436.png"
                            alt="MasterCard">
                        <img class="h-10" src="https://cdn.iconscout.com/icon/free/png-256/amex-226419.png" alt="Amex">
                    </div>
                </div>
                <div class="flex items-center border border-gray-300 p-3">
                    <input id="paypal" name="payment-method" type="radio" value="PayPal"
                        class="form-radio h-5 w-5 text-blue-600">
                    <label for="paypal" class="ml-3 text-lg font-medium">PayPal</label>
                    <div class="ml-auto">
                        <img class="h-6" src="https://cdn.iconscout.com/icon/free/png-256/paypal-3-226454.png"
                            alt="PayPal">
                    </div>
                </div>
            </div>
            <div class="mt-4">
                <p class="text-sm text-gray-500 mb-6">By completing your purchase, you agree to these <a href="#" class="text-blue-600 underline">Terms of Service</a>.</p>
                <button id="completeCheckoutBtn" class="bg-purple-700 text-white font-semibold py-3 rounded-lg hover:bg-purple-500 transition">
                    Complete Checkout
                </button>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        loadCheckoutData();
        document.getElementById('completeCheckoutBtn').addEventListener('click', handleCheckout);

        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', function() {
                const index = this.getAttribute('data-index');
                cart.splice(index, 1);
                localStorage.setItem('cart', JSON.stringify(cart));
                location.reload();
            });
        });
    });

    function loadCheckoutData() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        const totalAmount = cart.reduce((sum, item) => sum + parseFloat(item.price), 0);

        const cartItemsContainer = document.getElementById('cart-items');
        const totalPriceElement = document.getElementById('total-price');

        if (cart.length === 0) {
            cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';
        } else {
            let total = 0;

            cart.forEach((item, index) => {
                total += parseFloat(item.price);

                const cartItemHTML = `
                    <div class="flex justify-between items-center border-b py-2">
                        <div class="mb-6">
                            <img src="${item.image}" alt="${item.name}" class="w-20 h-auto rounded-lg shadow-lg" style="width: 50px; height: 50px; object-fit: cover;">
                        </div>
                        <span>${item.name}</span>
                        <span>${item.price}vnd</span>
                        <button class="remove-item bg-purple-700 text-white font-semibold py-3 rounded-lg hover:bg-purple-300 transition" data-index="${index}">Remove</button>
                    </div>
                `;
                cartItemsContainer.innerHTML += cartItemHTML;
            });

            totalPriceElement.innerText = total.toFixed(2);
        }
    }

    function formatPrice(price) {
        let formattedPrice = price.toLocaleString('vi-VN');
        if (Number.isInteger(parseFloat(price))) {
            formattedPrice += '.000 vnÄ‘';
        }
        return formattedPrice;
    }

    // function getQueryParams() {
    //     const params = new URLSearchParams(window.location.search);
    //     return {
    //         courseId: params.get('courseId'),
    //         instructorId: params.get('instructorId'),
    //         courseName: params.get('courseName'),
    //         price: params.get('price'),
    //         imgUrl: params.get('courseImg')
    //     };
    // }

    async function handleCheckout() {
        console.log('Checkout button clicked');

        const paymentMethod = document.querySelector('input[name="payment-method"]:checked');
        if (!paymentMethod) {
            alert('Please select a payment method.');
            return;
        }

        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        if (cart.length === 0) {
            alert('Your cart is empty.');
            return;
        }

        const totalAmount = cart.reduce((sum, item) => sum + parseFloat(item.price), 0);

        const transactionData = {
            learnerId: localStorage.getItem("id"),
            amount: totalAmount,
            transactionDate: new Date().toISOString(),
            paymentMethod: paymentMethod.value,
            transactionItems: cart.map(item => ({
                courseId: item.courseId || '', // Adjust as needed
                certificateName: '',
                certificatePrice: 0
            })),
            totalAmount: totalAmount
        };

        console.log('Transaction Data:', transactionData);

        try {
            const response = await fetch('http://localhost:3000/api/transactions', { // Adjust URL as needed
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(transactionData),
            });

            if (!response.ok) {
                const errorText = await response.text();
                console.error(`HTTP error! status: ${response.status}, message: ${errorText}`);
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            alert(`Checkout successful! ${data.message}`);

            localStorage.removeItem('cart');
            window.location.href = `/learners/myAccount/${transactionData.learnerId}`;
        } catch (error) {
            console.error('There was a problem with the fetch operation:', error);
            alert('Checkout failed. Please try again.');
        }
    }
    </script>
</body>
</html>
